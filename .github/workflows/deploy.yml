name: Deploy Express App to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Archive project
        run: zip -r app.zip . -x "*.git*" "node_modules/*" ".github/*"

      - name: Debug EC2_SSH_KEY
        run: |
          echo "Private key starts with:"
          echo "${{ secrets.EC2_SSH_KEY }}" | head -n 2
          echo "(GitHub redacts secrets, but this confirms presence)"

      - name: Test SSH port from runner
        run: |
          sudo apt-get update
          sudo apt-get install -y netcat-openbsd
          nc -zv ${{ secrets.EC2_HOST }} 22



      - name: Code archive to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "app.zip"
          target: "~"

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            set -e
            cd ~
            rm -rf WTV
            unzip -o app.zip -d WTV
            cd WTV

            echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
            echo "GOOGLE_APP_PASSWORD=${{ secrets.GOOGLE_APP_PASSWORD }}" >> .env
            echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
            echo "GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }}" >> .env
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
            echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env
            echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env

            docker-compose down || true
            docker-compose up --build -d